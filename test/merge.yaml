fixtures:
  a:
    a: a
    b: a
  b:
    b: b
    c: b
  c: [a, b, 1, 1, true]
  d: [b, c, 0, 1, false]
  complexA:
    a: a
    b:
      c: d
      e: f
    g: [h, i]
  complexB:
    assign:
      <=:
        b:
          x: y
        g: [z]
    pull:
      b:
        <-:
          c: true
        <+:
          h: true
      g:
        <-: i
    bool:
      b:
        <&:
          j: true
        <|:
          k: true
    push:
      <=:
        d: e
        g:
          <+: j
    if:
      <=:
        b:
          <?:
            c: x
            y: x
    ifNot:
      <=:
        b:
          <!:
            c: x
            y: x
    nested:
      <&:
        b:
          <+:
            c: x
        g:
          <+:
            a: b
  embedded:
    nested2:
      <=:
        x:
          v: a
          a:
            b: 1
            c: b
        expanded:
          a:
            b: 1
            c: 1
      <|:
        x:
          v: 1
          a:
            <-:
              c: v
        expanded:
          a:
            b: x
    mult:
      <=:
        x:
          a:
            c: b
          b: v
      <*:
        ~x.a: 1
    xor:
      <=:
        s:
          x: val
          y: 1
      <^:
        s:
          y: 1
          t: 5
expect:
  operators:
    <=:
      b: b
      c: b
    <|:
      a: a
      b: b
      c: b
    <?:
      a: a
      b: b
    <!:
      a: a
      b: a
      c: b
    <&:
      b: b
    <-:
      a: a
  arrayOperators:
    # [a, b, 1, 1, true]
    # [b, c, 0, 1, false]
    <=: [b, c, 0, 1, false]
    <|: [a, b, 1, true, c, 0, false]
    <+: [a, b, 1, 1, true, b, c, 0, 1, false]
    <&: [b, 1]
    <^: [a, true, c, 0, false]
    <-: [a, true]
    <!: [c, 0, false]
    <*: [a, b, 0, 1]
    <?: [b, c, 0, 1]
  complex:
    assign:
      b:
        x: y
      g: [z]
    pull:
      a: a
      b:
        e: f
        h: true
      g: [h]
    bool:
      a: a
      b:
        k: true
      g: [h, i]
    push:
      d: e
      g: [h, i, j]
    if:
      b:
        c: x
        e: f
    ifNot:
      b:
        c: d
        e: f
        y: x
    nested:
      b:
        c: x
        e: f
      g:
      - h
      - i
      - a: b
    nested2:
      x:
        v: 1
        a:
          b: 1
      expanded:
        a:
          b: x
          c: 1
    mult:
      x:
        a:
          c: b
    xor:
      s:
        x: val
        t: 5

